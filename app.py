import dash
from dash import html, dcc
from dash.dependencies import Input, Output, State
import dash_bootstrap_components as dbc

app = dash.Dash(__name__, external_stylesheets=[dbc.themes.FLATLY])
app.title = "–û—Ü—ñ–Ω–∫–∞ –≤–∞—Ä—Ç–æ—Å—Ç—ñ –∫–∞—Ä—Ç–∫–∏"    

server = app.server

app.layout = dbc.Container([
    html.Br(),
    dbc.Card([
        dbc.CardHeader(html.H2("üí≥ –û—Ü—ñ–Ω–∫–∞ –≤–∞—Ä—Ç–æ—Å—Ç—ñ –∫–æ–ª–µ–∫—Ü—ñ–π–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏", className="text-center")),
        dbc.CardBody([
            dbc.Row([
                dbc.Col([
                    dbc.Label("–ë–∞–∑–æ–≤–∞ —Ü—ñ–Ω–∞ (–≥—Ä–Ω):", className="fw-bold"),
                    dbc.Input(id="base_price", type="number", min=0, value=100, placeholder="–í–≤–µ–¥—ñ—Ç—å –±–∞–∑–æ–≤—É —Ü—ñ–Ω—É"),
                ], md=6),
                dbc.Col([
                    dbc.Label("–ú–æ–≤–∞:", className="fw-bold"),
                    dcc.Dropdown(
                        id="language",
                        options=[
                            {"label": "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞", "value": "uk"},
                            {"label": "–ê–Ω–≥–ª—ñ–π—Å—å–∫–∞", "value": "en"},
                            {"label": "–Ø–ø–æ–Ω—Å—å–∫–∞", "value": "jp"},
                            {"label": "–Ü—Ç–∞–ª—ñ–π—Å—å–∫–∞", "value": "it"}
                        ],
                        value="uk",
                        placeholder="–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É"
                    ),
                ], md=6)
            ], className="mb-3"),

            dbc.Row([
                dbc.Col([
                    dbc.Checklist(
                        options=[{"label": "–§–æ–ª—å–≥–æ–≤–∞–Ω–µ –ø–æ–∫—Ä–∏—Ç—Ç—è", "value": "foil"}],
                        value=[],
                        id="foil",
                        switch=True
                    )
                ], md=6),
                dbc.Col([
                    dbc.Checklist(
                        options=[{"label": "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –º–∞–ª—é–Ω–æ–∫", "value": "alt"}],
                        value=[],
                        id="alt_art",
                        switch=True
                    )
                ], md=6),
            ], className="mb-3"),

            dbc.Row([
                dbc.Col([
                    dbc.Label("–°—Ç–∞–Ω –∫–∞—Ä—Ç–∫–∏:", className="fw-bold"),
                    dcc.Dropdown(
                        id="condition",
                        options=[
                            {"label": "–Ü–¥–µ–∞–ª—å–Ω–∏–π", "value": "perfect"},
                            {"label": "–¢—Ä–æ—Ö–∏ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π", "value": "minor"},
                            {"label": "–ü–æ—à–∫–æ–¥–∂–µ–Ω–∏–π", "value": "damaged"},
                            {"label": "–°–∏–ª—å–Ω–æ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π", "value": "heavily"}
                        ],
                        value="perfect",
                        placeholder="–û–±–µ—Ä—ñ—Ç—å —Å—Ç–∞–Ω"
                    ),
                ], md=12)
            ], className="mb-4"),

            dbc.Row([
                dbc.Col([
                    dbc.Button("üîç –†–æ–∑—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å", id="calc_btn", color="primary", className="w-100"),
                ], md=12)
            ]),

            html.Hr(),

            dbc.Row([
                dbc.Col(html.Div(id="result", className="text-center fw-bold fs-4 text-success"))
            ])
        ])
    ], className="shadow-lg p-4 bg-light")
], fluid=True)


@app.callback(
    Output("result", "children"),
    Input("calc_btn", "n_clicks"),
    State("base_price", "value"),
    State("language", "value"),
    State("foil", "value"),
    State("alt_art", "value"),
    State("condition", "value")
)
def calculate_price(n_clicks, base_price, language, foil_list, alt_art_list, condition):
    if not n_clicks:
        return ""

    price = base_price

    # –°—Ç–∞–Ω
    condition_modifiers = {
        "perfect": 0.0,
        "minor": -0.25,
        "damaged": -0.5,
        "heavily": -0.75
    }
    price *= (1 + condition_modifiers.get(condition, 0))

    # –ú–æ–≤–∞
    language_modifiers = {
        "uk": 0.10,
        "en": 0.05,
        "jp": 0.25,
        "it": 0.20
    }
    price *= (1 + language_modifiers.get(language, 0))

    # –û–±–º–µ–∂–µ–Ω–Ω—è –Ω–∞ —Ñ–æ–ª—å–≥—É–≤–∞–Ω–Ω—è
    if "foil" in foil_list:
        if language in ["jp", "it"]:
            return "‚ùå –û–±—Ä–∞–Ω–∞ –º–æ–≤–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î —Ñ–æ–ª—å–≥–æ–≤–∞–Ω—ñ –∫–∞—Ä—Ç–∫–∏!"
        price *= 1.5

    # –û–±–º–µ–∂–µ–Ω–Ω—è –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –∞—Ä—Ç
    if "alt" in alt_art_list:
        if language == "it":
            return "‚ùå –Ü—Ç–∞–ª—ñ–π—Å—å–∫—ñ –∫–∞—Ä—Ç–∫–∏ –Ω–µ –º–∞—é—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –º–∞–ª—é–Ω–∫–∞!"
        price *= 1.5

    return f"üí∞ –û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∫–∞—Ä—Ç–∫–∏: {round(price, 2)} –≥—Ä–Ω"


if __name__ == "__main__":
    app.run(debug=True)
